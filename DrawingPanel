package second_shape_drawing;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Insets;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Scanner;

import javax.swing.JPanel;

public class DrawingPanel extends JPanel{
	Drawing drawing = new Drawing();

	Image offScreenImage = null;
	Dimension screenDimension = null;

	//***** Inner Class *****
	class MyMouseHandler extends MouseAdapter
	{        
		public void mousePressed(MouseEvent e)
		{
			drawing.mousePressed(e.getPoint());
			repaint();
		}
		public void mouseReleased(MouseEvent e)
		{
			drawing.mouseReleased(e.getPoint());
			repaint();
		}
		public void mouseDragged(MouseEvent e)
		{
			drawing.mouseDragged(e.getPoint());
			repaint();
		}
	}

	//***** End Inner Class *****

	DrawingPanel()
	{
		MyMouseHandler mmh = new MyMouseHandler();
		addMouseListener(mmh);
		addMouseMotionListener(mmh);
	}
	public void paint(Graphics screen)
	{
		Dimension dimen = getSize();
		if (offScreenImage==null || !dimen.equals(screenDimension))
		{
			screenDimension = dimen;
			offScreenImage = createImage(dimen.width, dimen.height);
		}
		Graphics g = offScreenImage.getGraphics();
		Insets insets = getInsets();
		int top = insets.top;
		int left = insets.left;
		g.setColor(Color.white);
		g.fillRect(0, 0, dimen.width, dimen.height);

		drawing.draw(g);

		// Draw a yellow banner on the top that prints out what we are currently doing
		Font font = g.getFont();
		FontMetrics fm = getFontMetrics(font);
		int fontHeight = fm.getHeight();
		g.setColor(Color.yellow);
		g.fillRect(0, top, dimen.width, fontHeight);
		String sdisplay = drawing.toString();
		g.setColor(Color.black);
		g.drawString(sdisplay, left , top+fm.getMaxAscent());

		screen.drawImage(offScreenImage, 0,0, this);
	}
}
